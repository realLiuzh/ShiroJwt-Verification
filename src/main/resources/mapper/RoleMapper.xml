<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzh.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.lzh.model.po.Role">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
    </resultMap>

    <resultMap id="RoleDto" type="com.lzh.model.dto.RoleDto" extends="BaseResultMap">
        <association property="permission" javaType="com.lzh.model.po.Permission">
            <id property="id" column="id"/>
            <result property="perCode" column="per_code"/>
            <result property="comment" column="comment"/>
        </association>

    </resultMap>
    <sql id="Base_Column_List">
        id, `name`, `comment`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectPermissionByRoleId" resultMap="RoleDto">
        select role.id,role.name,role.`comment`,p.id,p.per_code,p.`comment`
        from role
                 left join role_permission rp on role.id = rp.role_id
                 left join permission p on p.id = rp.permission_id
        where role.id = #{id}

    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from role
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lzh.model.po.Role" useGeneratedKeys="true">
        insert into role (`name`, `comment`)
        values (#{name,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lzh.model.po.Role"
            useGeneratedKeys="true">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                `name`,
            </if>
            <if test="comment != null">
                `comment`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="comment != null">
                #{comment,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lzh.model.po.Role">
        update role
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="comment != null">
                `comment` = #{comment,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lzh.model.po.Role">
        update role
        set `name`    = #{name,jdbcType=VARCHAR},
            `comment` = #{comment,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>