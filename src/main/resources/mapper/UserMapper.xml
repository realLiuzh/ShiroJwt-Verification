<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzh.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.lzh.model.po.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="reg_time" jdbcType="TIMESTAMP" property="regTime"/>
    </resultMap>

    <resultMap id="UserDto" type="com.lzh.model.dto.UserDto" extends="BaseResultMap">
        <association property="role" javaType="com.lzh.model.po.Role">
            <id property="id" column="role_id"/>
            <result property="name" column="name"/>
            <result property="comment" column="comment"/>
        </association>

    </resultMap>


    <sql id="Base_Column_List">
        id, username, `password`, reg_time
    </sql>

    <select id="selectByUsername" resultType="com.lzh.model.po.User">
        select *
        from user
        where username = #{username}
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectRoleByUserName" resultMap="UserDto">
        select user.id, user.username, user.`password`, r.id role_id, r.`name`, r.`comment`
        from user
                 left join user_role ur on user.id = ur.user_id
                 left join role r on r.id = ur.role_id
        where username = #{username}
    </select>

    <select id="checkUserNameIsValid" resultType="java.lang.Integer">
        select count(*)
        from user
        where username = #{username};
    </select>
    <select id="selectByPhone" resultType="com.lzh.model.po.User">
        select *
        from user
        where phone = #{phone}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lzh.model.po.User" useGeneratedKeys="true">
        insert into user (username, `password`, phone, reg_time)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
                #{regTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lzh.model.po.User"
            useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                `password`,
            </if>
            <if test="regTime != null">
                reg_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="regTime != null">
                #{regTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lzh.model.po.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="regTime != null">
                reg_time = #{regTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lzh.model.po.User">
        update user
        set username   = #{username,jdbcType=VARCHAR},
            `password` = #{password,jdbcType=VARCHAR},
            reg_time   = #{regTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>